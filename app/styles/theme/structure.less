/* Site Stuctural Layout
---------------------------------- */
body {
	overflow-x: hidden; //firefox no h-scroll
}

.app {
	height: auto;
}

.post {
	.shift & {
		overflow: hidden;
	}
}

.loader {
	display: none;
	visibility: hidden;
	opacity: 0;
	position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
	z-index: @zindex-modal;
}

.appnav {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	width: auto;
	height: auto;
	overflow: hidden;
	background-color: @nav-bg;
	.shift &, .shifting & {
		.backdrop-blur(@backdrop-blur);// filter experiment
		background-color: fade(@black, 90%);// filter
		z-index: 47;
		.dark & {
			background-color: fade(@black, 85%);// filter experiment
		}
	}
}

.appcontainer {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	padding: 0;
	width: auto;
	height: auto;
	//.scale3D(1, 1, 1);
	.transition(all 400ms cubic-bezier(0.175, 0.885, 0.335, 1.05));
	.cover & { // cover for non scrolling pages
		position: absolute;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;
		overflow: hidden;
	}
	.post & {
	}
	.shift--start & {
		.scale3D(1, 1, 1);
	}
	.shift & {
		overflow: hidden;
	}
	.shifting & {
		overflow: hidden;
	}
	.zoom-overlay-open & {
		.transform(none);
	}
}

.overlay {
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	z-index: 3;
	cursor: pointer;
	display: none;// display under shift
	opacity: 0;// display under shift
	.shift & {
		display: block;
		opacity: 1;
		overflow-x: hidden;
	}
}

.appheader {
	position: fixed;
	top: 0;
	right: 0;
	left: 0;
	width: 100%;
	padding: 15px;
	opacity: 1;
	z-index: 47;
	@media (min-width: @screen-sm-min) {
		padding: 25px;
	}
	.is-exiting & {
		opacity: 0;
	}
	.shifting .is-exiting & {
		transition-delay: @scene-delay;
	}
	
	.post & {
		// Transitions while scrolling
		.backdrop-blur(@backdrop-blur);// filter experiment
		@media (min-width: @screen-sm-min) {
			.backdrop-blur(0);// filter experiment
		}
		&--top {
			background-color: fade(@white, 100%);
			border-bottom: 1px solid fade(@black, 10%);
			@media (min-width: @screen-sm-min){
				background-color: fade(@white, 0%);
				border-bottom: 1px solid fade(@black, 0%);
			}
			.delay & {
				.transition-delay(100ms);
			}
			.shift &, .shifting & {
				background-color: fade(@white, 0%);
				border-bottom: 1px solid fade(@black, 0%);
			}
		}
		&--top.slideInDown {
			transition: background-color @header-duration, box-shadow @header-duration, border @header-duration;
			.shift &, .shifting & {
				transition: background-color 100ms, box-shadow 100ms, border 100ms; //reset when shifting
			}
		}
		&--not-top.slideInDown {
			background-color: fade(@white, 80%);
			border-bottom: 1px solid fade(@black,10%);
			.backdrop-blur(@backdrop-blur);// filter experiment
		}
		&--not-top.slideOutUp {
			background-color: fade(@white, 0%);
			border-bottom: 1px solid fade(@black, 0%);
		}
		.shift & {
			//background-color: fade(@body-bg, 90%);// fade when open
		}
	}
}

article {
	.post & {
		padding-top: 56px; // Offset mobile content from header
		@media (min-width: @screen-sm-min) {
			padding-top: 0px;
		}
	}
}

.appcontent {
	opacity: 1;
	.backface-visibility(hidden);
	.cover & {
		height: 100%;
	}
	.post & {
		height: auto;
		.shift & {
			
		}
	}
	.shift & {
		opacity: 1;// opaque when open
	}
}

.content {
	.cover & {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
	.post & {
		//padding-bottom: 20px;// whitespace above footer
		background-color: @body-bg;
		min-height: 100%;
	}
	.shift & {
		.opacity(.8);// fade when open
	}
	// .shifting & {
	// 	overflow-y: hidden;
	// }
	.slider & {
		margin: 0;
		padding: 0;
	}
}

.post article {
	//padding-top: 70px;
	@media (min-width: @screen-sm-min) {
		//padding-top: 80px;
	}
}

.footer {
	border-top: 1px solid @footer-border;
	.post & {
		width: 100%;
		height: 80px;// fixed height for sticky footer
		background-color: @footer-bg;
		.footer-inner {
			line-height: 80px;
	  	text-align: center;
		}
	}
}

.boards {
	background-color: @body-bg;
}

// Top Left Info
.myinfo {
	position: relative;
	display: inline-block;
	cursor: default;
	* {
		margin: 0;
		padding: 0;
		.box-sizing(border-box);
	}
}
